name: SYCL CTS CI

on:
  pull_request:
  workflow_dispatch:

jobs:
  compile-cts:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        sycl-impl: [computecpp, dpcpp, hipsycl]
    env:
      container-workspace: /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
      parallel-build-jobs: 2
    container:
      # image: khronosgroup/sycl-cts-ci:${{ matrix.sycl-impl }}
      # ComputeCpp images are hosted by Codeplay
      image: ${{ format('{0}/sycl-cts-ci:{1}', matrix.sycl-impl != 'computecpp' && 'khronosgroup' || 'scottstraughan', matrix.sycl-impl) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Configure CMake
        working-directory: ${{ env.container-workspace }}
        run: |
          bash /scripts/configure.sh \
            -DSYCL_CTS_EXCLUDE_TEST_CATEGORIES="${{ env.container-workspace }}/ci/${{ matrix.sycl-impl }}.filter" \
            -DSYCL_CTS_MEASURE_BUILD_TIMES=ON
      - name: Build 'oclmath'
        working-directory: ${{ env.container-workspace }}/build
        run: cmake --build . --target oclmath
      - name: Build 'util'
        working-directory: ${{ env.container-workspace }}/build
        run: cmake --build . --target util
      - name: Build all supported test categories
        working-directory: ${{ env.container-workspace }}/build
        run: |
          TS_BEFORE=$(date +%s)
          cmake --build . --target test_all --parallel ${{ env.parallel-build-jobs }}
          TS_AFTER=$(date +%s)
          ELAPSED=$(($TS_AFTER - $TS_BEFORE))
          sort --numeric-sort --reverse --output=build_times.log build_times.log
          echo "Total time: $( date --date=@$ELAPSED --utc '+%-Hh %-Mm %-Ss' )" >> build_times.log
      - name: Upload build times artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-times-${{ matrix.sycl-impl }}
          path: ${{ env.container-workspace }}/build/build_times.log
